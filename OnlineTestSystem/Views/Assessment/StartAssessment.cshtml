@using OnlineTestSystem.Models.ResponseModel
@model AssessmentResponseModel
@{
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}
<div class="container quiz-container">
    <div class="row">
        <div class="col-md-12">
            <form id="assessmentFormId" method="POST">
                @{
                    int sectionIndex = 0;
                }
                <input type="hidden" asp-for="Id"/>
                <input type="hidden" asp-for="TestName" />
                <input type="hidden" asp-for="Description" />
                @foreach (var sectionItem in Model.Sections)
                {
                    <div class="section-container">
                        <h3>@sectionItem.SectionName</h3>
                        <input type="hidden" name="Sections[@sectionIndex].Id" value="@sectionItem.Id" />
                        <input type="hidden" name="Sections[@sectionIndex].SectionName" value="@sectionItem.SectionName" />

                        @if (sectionItem.Questions != null && sectionItem.Questions.Any())
                        {
                            int questionIndex = 0;
                            @foreach (var questionItem in sectionItem.Questions)
                            {
                                <div class="question-block">
                                    <p>@questionItem.QuestionText</p>
                                    <input type="hidden" name="Sections[@sectionIndex].Questions[@questionIndex].Id" value="@questionItem.Id" />
                                    <input type="hidden" name="Sections[@sectionIndex].Questions[@questionIndex].QuestionText" value="@questionItem.QuestionText" />

                                    <label>
                                        <input type="radio" name="Sections[@sectionIndex].Questions[@questionIndex].SelectedAnswer" value="true" />
                                        Yes
                                    </label>
                                    <label>
                                        <input type="radio" name="Sections[@sectionIndex].Questions[@questionIndex].SelectedAnswer" value="false" />
                                        No
                                    </label>
                                </div>
                                questionIndex++;
                            }
                        }
                    </div>
                    sectionIndex++;
                }

                <div class="text-center mt-4">
                    <button type="button" onclick="btnSubmitAssessmentData()" class="btn btn-primary btn-lg">Submit Test</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    const totalQuestions = @Model.Sections.Sum(s => s.Questions.Count);
    const totalTimeInSeconds = totalQuestions * 2 * 60;
    let timer = totalTimeInSeconds;
    const timerElement = document.getElementById("timer");

    function updateTimer() {
        const minutes = Math.floor(timer / 60);
        const seconds = timer % 60;
        timerElement.textContent = `${minutes}:${seconds < 10 ? '0' + seconds : seconds}`;

        if (timer === 0) {
            toastr.Error("Time's up!");
            document.getElementById("submitButton").disabled = false;
        } else {
            timer--;
            setTimeout(updateTimer, 1000);
        }
    }

    updateTimer();
</script>

<style>
    /* General container styles */
    .quiz-container {
        font-family: 'Arial', sans-serif;
        background-color: #f7f7f7;
        padding: 20px;
    }

    /* Section and question styling */
    .section-container {
        margin-bottom: 30px;
    }

    .section-title {
        font-size: 1.75rem;
        font-weight: bold;
        color: #2c3e50;
        margin-bottom: 20px;
    }

    .question-block {
        background-color: #fff;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 15px;
    }

    .question-text {
        font-size: 1.25rem;
        color: #555;
        margin-bottom: 10px;
    }

    /* Styling for answer options */
    .answer-buttons {
        display: flex;
        gap: 20px;
        margin-top: 10px;
    }

    .answer-label {
        display: flex;
        align-items: center;
        cursor: pointer;
        font-size: 1.1rem;
        color: #333;
    }

    .answer-radio {
        margin-right: 10px;
    }

    .answer-text {
        font-weight: bold;
    }

    /* Timer styling */
    .timer-container {
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        padding: 15px;
        margin-bottom: 30px;
    }

    .timer-text {
        font-size: 1.5rem;
        color: #e74c3c;
    }

    /* Submit Button */
    .btn-primary {
        background-color: #3498db;
        border-color: #2980b9;
    }

    .section-title {
        font-size: 1.5rem;
    }

    .question-text {
        font-size: 1rem;
    }

    .answer-buttons {
        flex-direction: column;
    }

    .btn-primary {
        font-size: 1.1rem;
    }

</style>
<script src="~/js/assessment/candidateassessment.js"></script>